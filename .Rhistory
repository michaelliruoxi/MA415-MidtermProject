# Filter for exact organic sales line
organic_sales_usd <- strw_census |>
filter(
`Category` == "ORGANIC - SALES",
`Domain` == "ORGANIC STATUS",
`Domain Category` == "ORGANIC STATUS: (NOP USDA CERTIFIED)",
!is.na(Value)
)
# Summarize by state
organic_sales_usd_by_state <- organic_sales_usd |>
group_by(State) |>
summarise(total_sales_usd = sum(Value, na.rm = TRUE)) |>
arrange(desc(total_sales_usd))
# Plot
ggplot(organic_sales_usd_by_state, aes(x = reorder(State, total_sales_usd), y = total_sales_usd)) +
geom_bar(stat = "identity", fill = "seagreen", color = "black") +
scale_y_continuous(labels = label_comma()) +
labs(
title = "Certified Organic Strawberry Sales by State (Measured in $)",
x = "State",
y = "Sales ($)"
) +
coord_flip() +
theme_minimal(base_size = 14)
# Ensure numeric values
strw_census <- strw_census |>
mutate(Value = as.numeric(gsub(",", "", Value)))
# Filter for exact organic sales line
organic_sales_usd <- strw_census |>
filter(
`Category` == "ORGANIC - SALES",
`Domain` == "ORGANIC STATUS",
`Domain Category` == "ORGANIC STATUS: (NOP USDA CERTIFIED)",
!is.na(Value)
)
# Summarize by state
organic_sales_usd_by_state <- organic_sales_usd |>
group_by(State) |>
summarise(total_sales_usd = sum(Value, na.rm = TRUE)) |>
arrange(desc(total_sales_usd))
# Plot
ggplot(organic_sales_usd_by_state, aes(x = reorder(State, total_sales_usd), y = total_sales_usd)) +
geom_bar(stat = "identity", fill = "seagreen", color = "black") +
scale_y_continuous(labels = label_comma()) +
labs(
title = "Certified Organic Strawberry Sales by State (Measured in $)",
x = "State",
y = "Sales ($)"
) +
coord_flip() +
theme_minimal(base_size = 14)
# Ensure numeric values
strw_census <- strw_census |>
mutate(Value = as.numeric(gsub(",", "", Value)))
# Filter for certified organic sales
organic_sales_usd <- strw_census |>
filter(
grepl("SALES", Category, ignore.case = TRUE),
grepl("ORGANIC", Category, ignore.case = TRUE),
Domain == "ORGANIC STATUS",
`Domain Category` == "ORGANIC STATUS: (NOP USDA CERTIFIED)",
!is.na(Value)
)
# Summarize by state
organic_sales_usd_by_state <- organic_sales_usd |>
group_by(State) |>
summarise(total_sales_usd = sum(Value, na.rm = TRUE)) |>
arrange(desc(total_sales_usd))
# Plot
ggplot(organic_sales_usd_by_state, aes(x = reorder(State, total_sales_usd), y = total_sales_usd)) +
geom_bar(stat = "identity", fill = "seagreen", color = "black") +
scale_y_continuous(labels = label_comma()) +
labs(
title = "Certified Organic Strawberry Sales by State (Measured in $)",
x = "State",
y = "Sales ($)"
) +
coord_flip() +
theme_minimal(base_size = 14)
# Ensure numeric values
strw_census <- strw_census |>
mutate(Value = as.numeric(gsub(",", "", Value)))
# Filter for certified organic sales
organic_sales_usd <- strw_census |>
filter(
grepl("SALES", Category, ignore.case = TRUE),
grepl("ORGANIC", Category, ignore.case = TRUE),
Domain == "ORGANIC STATUS",
`Domain Category` == "ORGANIC STATUS: (NOP USDA CERTIFIED)",
!is.na(Value)
)
# Summarize by state
organic_sales_usd_by_state <- organic_sales_usd |>
group_by(State) |>
summarise(total_sales_usd = sum(Value, na.rm = TRUE)) |>
arrange(desc(total_sales_usd))
# Plot
ggplot(organic_sales_usd_by_state, aes(x = "", y = total_sales_usd, fill = State)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar("y") +
labs(
title = "Certified Organic Strawberry Sales by State (Pie Chart)",
fill = "State"
) +
theme_void(base_size = 14) +  # cleaner for pie
theme(
plot.title = element_text(hjust = 0.5, face = "bold")
)
# Ensure numeric values
strw_census <- strw_census |>
mutate(Value = as.numeric(gsub(",", "", Value)))
# Filter for certified organic sales
organic_sales_usd <- strw_census |>
filter(
grepl("SALES", Category, ignore.case = TRUE),
grepl("ORGANIC", Category, ignore.case = TRUE),
Domain == "ORGANIC STATUS",
`Domain Category` == "ORGANIC STATUS: (NOP USDA CERTIFIED)",
!is.na(Value)
)
# Summarize by state
organic_sales_usd_by_state <- organic_sales_usd |>
group_by(State) |>
summarise(total_sales_usd = sum(Value, na.rm = TRUE)) |>
arrange(desc(total_sales_usd))
# Add percentage column
organic_sales_usd_by_state <- organic_sales_usd_by_state |>
mutate(pct = total_sales_usd / sum(total_sales_usd) * 100,
label = paste0(State, ": ", round(pct, 1), "%"))
# Plot
ggplot(organic_sales_usd_by_state, aes(x = "", y = total_sales_usd, fill = State)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar("y") +
geom_text(aes(label = label), position = position_stack(vjust = 0.5), size = 3) +
labs(
title = "Certified Organic Strawberry Sales by State (Pie Chart)",
fill = "State"
) +
theme_void(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold")
)
# Ensure numeric values
strw_census <- strw_census |>
mutate(Value = as.numeric(gsub(",", "", Value)))
# Filter for certified organic sales
organic_sales_usd <- strw_census |>
filter(
grepl("SALES", Category, ignore.case = TRUE),
grepl("ORGANIC", Category, ignore.case = TRUE),
Domain == "ORGANIC STATUS",
`Domain Category` == "ORGANIC STATUS: (NOP USDA CERTIFIED)",
!is.na(Value)
)
# Summarize by state
organic_sales_usd_by_state <- organic_sales_usd |>
group_by(State) |>
summarise(total_sales_usd = sum(Value, na.rm = TRUE)) |>
arrange(desc(total_sales_usd))
# Prepare the percentage + label text
organic_sales_usd_by_state <- organic_sales_usd_by_state |>
mutate(
pct = total_sales_usd / sum(total_sales_usd),
label = paste0(State, ": ", scales::percent(pct, accuracy = 0.1))
)
# Better pie chart
ggplot(organic_sales_usd_by_state, aes(x = "", y = total_sales_usd, fill = State)) +
geom_bar(width = 1, stat = "identity", color = "black") +
coord_polar("y", start = 0) +
geom_text(aes(label = label),
position = position_stack(vjust = 0.5),
size = 3,
color = "white",
fontface = "bold") +
labs(
title = "Certified Organic Strawberry Sales by State",
fill = "State"
) +
theme_void(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold")
)
# Ensure numeric values
strw_census <- strw_census |>
mutate(Value = as.numeric(gsub(",", "", Value)))
# Filter for certified organic sales
organic_sales_usd <- strw_census |>
filter(
grepl("SALES", Category, ignore.case = TRUE),
grepl("ORGANIC", Category, ignore.case = TRUE),
Domain == "ORGANIC STATUS",
`Domain Category` == "ORGANIC STATUS: (NOP USDA CERTIFIED)",
!is.na(Value)
)
# Summarize by state
organic_sales_usd_by_state <- organic_sales_usd |>
group_by(State) |>
summarise(total_sales_usd = sum(Value, na.rm = TRUE)) |>
arrange(desc(total_sales_usd))
# Prepare the percentage + label text
organic_sales_usd_by_state <- organic_sales_usd_by_state |>
mutate(
pct = total_sales_usd / sum(total_sales_usd),
label = paste0(State, ": ", scales::percent(pct, accuracy = 0.1))
)
# Better pie chart
ggplot(organic_sales_usd_by_state, aes(x = "", y = total_sales_usd, fill = State)) +
geom_bar(width = 0.6, stat = "identity", color = "black")  +
coord_polar("y", start = 0) +
geom_text(aes(label = label),
position = position_stack(vjust = 0.5),
size = 3,
color = "white",
fontface = "bold") +
labs(
title = "Certified Organic Strawberry Sales by State",
fill = "State"
) +
theme_void(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold")
)
# Ensure numeric values
strw_census <- strw_census |>
mutate(Value = as.numeric(gsub(",", "", Value)))
# Filter for certified organic sales
organic_sales_usd <- strw_census |>
filter(
grepl("SALES", Category, ignore.case = TRUE),
grepl("ORGANIC", Category, ignore.case = TRUE),
Domain == "ORGANIC STATUS",
`Domain Category` == "ORGANIC STATUS: (NOP USDA CERTIFIED)",
!is.na(Value)
)
# Summarize by state
organic_sales_usd_by_state <- organic_sales_usd |>
group_by(State) |>
summarise(total_sales_usd = sum(Value, na.rm = TRUE)) |>
arrange(desc(total_sales_usd))
# Prepare the percentage + label text
organic_sales_usd_by_state <- organic_sales_usd_by_state |>
mutate(
pct = total_sales_usd / sum(total_sales_usd),
label = paste0(State, ": ", scales::percent(pct, accuracy = 0.1))
)
# Step 1: Recalculate % and group small states
threshold <- 0.05  # set your threshold for grouping (5%)
organic_sales_usd_by_state <- organic_sales_usd_by_state |>
mutate(pct = total_sales_usd / sum(total_sales_usd)) |>
mutate(State_grouped = ifelse(pct < threshold, "Other", State)) |>
group_by(State_grouped) |>
summarise(total_sales_usd = sum(total_sales_usd)) |>
ungroup() |>
mutate(
pct = total_sales_usd / sum(total_sales_usd),
label = paste0(State_grouped, ": ", percent(pct, accuracy = 0.1))
)
# Step 2: Plot donut chart with combined categories
ggplot(organic_sales_usd_by_state, aes(x = "", y = total_sales_usd, fill = State_grouped)) +
geom_bar(width = 0.6, stat = "identity", color = "black") +
coord_polar("y", start = 0) +
geom_text(aes(label = label),
position = position_stack(vjust = 0.5),
size = 4,
color = "white",
fontface = "bold") +
labs(
title = "Certified Organic Strawberry Sales by State",
fill = "State"
) +
theme_void(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold")
)
# Ensure numeric values
strw_census <- strw_census |>
mutate(Value = as.numeric(gsub(",", "", Value)))
# Filter for certified organic sales
organic_sales_usd <- strw_census |>
filter(
grepl("SALES", Category, ignore.case = TRUE),
grepl("ORGANIC", Category, ignore.case = TRUE),
Domain == "ORGANIC STATUS",
`Domain Category` == "ORGANIC STATUS: (NOP USDA CERTIFIED)",
!is.na(Value)
)
# Summarize by state
organic_sales_usd_by_state <- organic_sales_usd |>
group_by(State) |>
summarise(total_sales_usd = sum(Value, na.rm = TRUE)) |>
arrange(desc(total_sales_usd))
# Prepare the percentage + label text
organic_sales_usd_by_state <- organic_sales_usd_by_state |>
mutate(
pct = total_sales_usd / sum(total_sales_usd),
label = paste0(State, ": ", scales::percent(pct, accuracy = 0.1))
)
# Step 1: Recalculate % and group small states
threshold <- 0.05  # set your threshold for grouping (5%)
organic_sales_usd_by_state <- organic_sales_usd_by_state |>
mutate(pct = total_sales_usd / sum(total_sales_usd)) |>
mutate(State_grouped = ifelse(pct < threshold, "Other", State)) |>
group_by(State_grouped) |>
summarise(total_sales_usd = sum(total_sales_usd)) |>
ungroup() |>
mutate(
pct = total_sales_usd / sum(total_sales_usd),
label = paste0(State_grouped, ": ", percent(pct, accuracy = 0.1))
)
# Step 2: Plot donut chart with combined categories
ggplot(organic_sales_usd_by_state, aes(x = "", y = total_sales_usd, fill = State_grouped)) +
geom_bar(width = 0.6, stat = "identity", color = "black") +
coord_polar("y", start = 0) +
geom_text_repel(
aes(label = label, y = cumsum(total_sales_usd) - total_sales_usd / 2),
size = 4,
nudge_x = 1,
segment.size = 0.3,
direction = "y",
box.padding = 0.5,
show.legend = FALSE
) +
labs(
title = "Certified Organic Strawberry Sales by State",
fill = "State"
) +
theme_void(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold")
)
# install required packages
install.packages("knitr")
install.packages("kableExtra")
install.packages("tidyverse")
install.packages("stringr")
install.packages("ggplot2")
# loading required packages
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
library(dplyr)
library(scales)
library(ggrepel)
install.packages("kableExtra")
install.packages("tidyverse")
install.packages("stringr")
install.packages("ggplot2")
install.packages("knitr")
install.packages("ggplot2")
install.packages("knitr")
install.packages("knitr")
install.packages("stringr")
# Ensure numeric values
strw_census <- strw_census |>
mutate(Value = as.numeric(gsub(",", "", Value)))
# Filter for certified organic sales
organic_sales_usd <- strw_census |>
filter(
grepl("SALES", Category, ignore.case = TRUE),
grepl("ORGANIC", Category, ignore.case = TRUE),
Domain == "ORGANIC STATUS",
`Domain Category` == "ORGANIC STATUS: (NOP USDA CERTIFIED)",
!is.na(Value)
)
# Summarize by state
organic_sales_usd_by_state <- organic_sales_usd |>
group_by(State) |>
summarise(total_sales_usd = sum(Value, na.rm = TRUE)) |>
arrange(desc(total_sales_usd))
# Prepare the percentage + label text
organic_sales_usd_by_state <- organic_sales_usd_by_state |>
mutate(
pct = total_sales_usd / sum(total_sales_usd),
label = paste0(State, ": ", scales::percent(pct, accuracy = 0.1))
)
# Step 1: Recalculate % and group small states
threshold <- 0.05  # set your threshold for grouping (5%)
organic_sales_usd_by_state <- organic_sales_usd_by_state |>
mutate(pct = total_sales_usd / sum(total_sales_usd)) |>
mutate(State_grouped = ifelse(pct < threshold, "Other", State)) |>
group_by(State_grouped) |>
summarise(total_sales_usd = sum(total_sales_usd)) |>
ungroup() |>
mutate(
pct = total_sales_usd / sum(total_sales_usd),
label = paste0(State_grouped, ": ", percent(pct, accuracy = 0.1))
)
# Step 2: Plot donut chart with combined categories
ggplot(organic_sales_usd_by_state, aes(x = "", y = total_sales_usd, fill = State_grouped)) +
geom_bar(width = 0.6, stat = "identity", color = "black") +
coord_polar("y", start = 0) +
geom_text_repel(
aes(label = label, y = cumsum(total_sales_usd) - total_sales_usd / 2),
size = 4,
nudge_x = 1,
segment.size = 0.3,
direction = "y",
box.padding = 0.5,
show.legend = FALSE
) +
labs(
title = "Certified Organic Strawberry Sales by State",
fill = "State"
) +
theme_void(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold")
)
# Ensure numeric values
strw_census <- strw_census |>
mutate(Value = as.numeric(gsub(",", "", Value)))
# Filter for certified organic sales
organic_sales_usd <- strw_census |>
filter(
grepl("SALES", Category, ignore.case = TRUE),
grepl("ORGANIC", Category, ignore.case = TRUE),
Domain == "ORGANIC STATUS",
`Domain Category` == "ORGANIC STATUS: (NOP USDA CERTIFIED)",
!is.na(Value)
)
# Summarize by state
organic_sales_usd_by_state <- organic_sales_usd |>
group_by(State) |>
summarise(total_sales_usd = sum(Value, na.rm = TRUE)) |>
arrange(desc(total_sales_usd))
# Prepare the percentage + label text
organic_sales_usd_by_state <- organic_sales_usd_by_state |>
mutate(
pct = total_sales_usd / sum(total_sales_usd),
label = paste0(State, ": ", scales::percent(pct, accuracy = 0.1))
)
# Step 1: Recalculate % and group small states
threshold <- 0.05  # set your threshold for grouping (5%)
organic_sales_usd_by_state <- organic_sales_usd_by_state |>
mutate(pct = total_sales_usd / sum(total_sales_usd)) |>
mutate(State_grouped = ifelse(pct < threshold, "Other", State)) |>
group_by(State_grouped) |>
summarise(total_sales_usd = sum(total_sales_usd)) |>
ungroup() |>
mutate(
pct = total_sales_usd / sum(total_sales_usd),
label = paste0(State_grouped, ": ", percent(pct, accuracy = 0.1))
)
# Step 2: Plot donut chart with combined categories
ggplot(organic_sales_usd_by_state, aes(x = "", y = total_sales_usd, fill = State_grouped)) +
geom_bar(width = 0.6, stat = "identity", color = "black") +
coord_polar("y", start = 0) +
geom_text_repel(
aes(label = label, y = cumsum(total_sales_usd) - total_sales_usd / 2),
size = 4,
nudge_x = 1,
segment.size = 0.3,
direction = "y",
box.padding = 0.5,
show.legend = FALSE
) +
labs(
title = "Certified Organic Strawberry Sales by State",
fill = "State"
) +
theme_void(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold")
)
# install required packages
install.packages("knitr")
install.packages("kableExtra")
install.packages("tidyverse")
install.packages("stringr")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("scales")
install.packages("ggrepel")
# loading required packages
library(knitr)
library(kableExtra)
library(tidyverse)
library(stringr)
library(ggplot2)
library(dplyr)
library(scales)
library(ggrepel)
# Ensure numeric values
strw_census <- strw_census |>
mutate(Value = as.numeric(gsub(",", "", Value)))
rm(list=ls())
# Label for the code chunk
#| label: read data - glimpse
# Read the CSV file "strawb_mar6.csv" into a data frame called 'strawberry'
# - 'col_names = TRUE' tells read_csv to treat the first row as column names
# - 'show_col_types = FALSE' suppresses printing of column type information
strawberry <- read_csv("strawb_mar6.csv",
col_names = TRUE,
show_col_types = FALSE)
# Label for the code chunk
#| label: read data - glimpse
# Read the CSV file "strawb_mar6.csv" into a data frame called 'strawberry'
# - 'col_names = TRUE' tells read_csv to treat the first row as column names
# - 'show_col_types = FALSE' suppresses printing of column type information
strawberry <- read_csv("strawb_mar6.csv",
col_names = TRUE,
show_col_types = FALSE)
# Label for the code chunk
#| label: read data - glimpse
# Read the CSV file "strawb_mar6.csv" into a data frame called 'strawberry'
# - 'col_names = TRUE' tells read_csv to treat the first row as column names
# - 'show_col_types = FALSE' suppresses printing of column type information
strawberry <- read_csv("strawb_mar6.csv",
col_names = TRUE,
show_col_types = FALSE)
